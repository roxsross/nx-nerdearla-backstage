apiVersion: scaffolder.backstage.io/v1beta3
# https://backstage.io/docs/features/software-catalog/descriptor-format#kind-template
kind: Template
metadata:
  name: terraform-template
  title: Example Terraform Template
  description: An example template for the scaffolder that creates a simple Terraform repo
  tags:
    - terraform
    - nerdearla
    - roxsross
spec:
  owner: group:platform
  type: service

  # These parameters are used to generate the input form in the frontend, and are
  # used to gather input data for the execution of the template.
  parameters:
    - title: Fill in some steps
      required:
        - name
        - region
        - team
      properties:
        name:
          title: Name
          type: string
          description: Unique name of the IaC component
          ui:autofocus: true
          ui:options:
            rows: 5
        region:
          title: Region
          type: string
          description: AWS Region to deploy to
          default: us-east-1
          enum:
            - us-east-1
            - us-west-1
          enumNames:
            - 'US East 1'
            - 'US West 1'
        team:
          title: Team Name
          type: string
          description: Team name that will own this project
          enum:
            - naranjax
            - cloud
            - network
            - security
        description:
          title: Resource Description
          type: string
          description: Description of the resource
          default: ""

    - title: Choose a location
      required:
        - repoUrl
      properties:
        repoUrl:
          title: Repository Location
          type: string
          ui:field: RepoUrlPicker
          ui:options:
            allowedHosts:
              - github.com

  # Re-include under ui:options: if we want to specify allowedOwners
  # allowedOwners:
  # - example_org_1
  # - example_user_1
  # - example_project_1

  # These steps are executed in the scaffolder backend, using data that we gathered
  # via the parameters above.
  steps:
    # Each step executes an action, in this case one templates files into the working directory.
    - id: fetch-base
      name: Fetch Base
      action: fetch:template
      input:
        url: ./terraform-s3
        values:
          name: ${{ parameters.name }}
          description: ${{ parameters.description }}
          region: ${{ parameters.region }}
          team: ${{ parameters.team }}

    # This step publishes the contents of the working directory to GitHub.
    # https://backstage.io/docs/reference/plugin-scaffolder-backend.createpublishgithubaction/
    - id: publish
      name: Publish
      action: publish:github
      input:
        allowedHosts: ['github.com']
        description: This is ${{ parameters.name }}
        repoUrl: ${{ parameters.repoUrl }}
        defaultBranch: main

    # The final step is to register our new component in the catalog.
    - id: register
      name: Register
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps['publish'].output.repoContentsUrl }}
        catalogInfoPath: '/catalog-info.yaml'

  # Outputs are displayed to the user after a successful execution of the template.
  output:
    links:
      - title: Repository
        url: ${{ steps['publish'].output.remoteUrl }}
      - title: Open in catalog
        icon: catalog
        entityRef: ${{ steps['register'].output.entityRef }}
